apiVersion: v1
kind: Service
metadata:
  name: pkggcp-k8s-nginx-service
  labels:
    app: nginx
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
  - name: nginx
    port: 80
    targetPort: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: pkggcp-k8s-nginx-deployment
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.21.1-alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: default
          mountPath: "/etc/nginx/nginx.conf"  ## 指定したファイルのみマウントする 
          subPath: "nginx.conf"
          readOnly: true
        - name: addconfig
          mountPath: "/etc/nginx/conf.d/default.conf"  ## 指定したファイルのみマウントする
          subPath: "rewrite.conf"
          readOnly: true
      volumes:
        - name: default 
          configMap:
            name: nginx-configmap
            items:  # key と path が一致している場合は記載の必要は無い
            - key: "nginx.conf"
              path: "nginx.conf"
        - name: addconfig
          configMap:
            name: nginx-configmap
            items:  # key と path が一致している場合は記載の必要は無い
            - key: "rewrite.conf"
              path: "rewrite.conf"

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configmap
data:
  rewrite.conf: |
    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        root /var/www/html;

        server_name _;
            access_log  /var/log/nginx/redirect-google_access.log;
            error_log   /var/log/nginx/redirect-google_gitlab_error.log;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            rewrite ^(.*)$  https://www.google.com/;
        }
    }
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
